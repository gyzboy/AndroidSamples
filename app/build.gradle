apply plugin: 'com.android.application'//应用的插件名

android {//android项目的DSL
    compileSdkVersion 24//required，编译sdk版本
    buildToolsVersion "24.0.0"//required，编译工具版本

    defaultConfig {//默认设置，类似于全局变量，所有的flavors都会共享

        multiDexEnabled true

        applicationId "com.gyz.androidsamples"//应用ID，用以代替packageName，与java区分开来
        minSdkVersion 17
        targetSdkVersion 23
        versionCode rootProject.ext.android.versionCode
        versionName "1.0"

    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/aidl']
            jni.srcDirs = ['src/main/java', 'src/main/jni']
        }
    }
    buildTypes {
        debug {
            buildConfigField "long", "launchTime", "0"
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.jcodecraeer:xrecyclerview:1.2.7'
    compile 'com.android.support:support-annotations:24.2.1'
    compile project(':androidopensamples')
    compile project(':base')
}

task updateIcon << {
    println "Generating Release Icon"
    def scriptDir = "/scripts";
    exec {
        executable "bash"
        args "$rootProject.rootDir$scriptDir/icon_gen.sh", "v1.0", rootProject.rootDir, scriptDir
    }
}
//preBuild.dependsOn updateIcon

buildscript {
    repositories {
        maven {
            url uri('../repo')
        }
    }

    dependencies {
        classpath group: 'com.gyz.androidsamples.gradle.plugin',
                name: 'plugin',//这里的plugin取的就是plugin的项目名
                version: '1.0.0'
    }
}

apply plugin: 'com.gyz.androidsamples.plugin'

myArgs {
    sender='gyzboy'
    message='Gradle is so simple.'
    nestArgs {
        receiver='gyzboy'
        email='gyzboy@126.com'
    }

}
